name: Build Samples

on:
  push:
    branches:
      - main
      - reorganize_fcore
  pull_request:
    branches:
      - '*'
  schedule:
    - cron: "0 0 * * 1"
env:
  test_roots: |
    app/samples/littlefs
    app/samples/sensor
    app/samples/shield_blinky
    app/samples/shield_mcp3561r
    app/samples/lora_bcast
    app/samples/udb_bcast

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: FSW

      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: python-${{ runner.os }}-${{ hashFiles('**/*.lock') }}
          restore-keys: |
            python-${{ runner.os }}-
    
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Cache Zephyr dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/west
            ~/.cache/zephyr
          key: zephyr-${{ runner.os }}-${{ hashFiles('**/*.txt') }}
          restore-keys: |
            zephyr-${{ runner.os }}-


      - name: Setup Zephyr project
        uses: zephyrproject-rtos/action-zephyr-setup@v1
        with:
          app-path: FSW
          toolchains: arm-zephyr-eabi
          
      - name: Build firmware
        working-directory: FSW
        shell: bash
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            EXTRA_TWISTER_FLAGS="--short-build-path -O/tmp/twister-out"
          fi
          west twister $(echo "${{ env.test_roots }}" | while IFS= read line; do if [[ $line = *[!\ ]* ]]; then echo -n " -T $line "; fi; done) -v --inline-logs --integration $EXTRA_TWISTER_FLAGS

